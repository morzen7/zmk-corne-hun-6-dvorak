/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */ 

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keys_hu.h"

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

        macros {
            ctrl_ctv: ctrl_ctv {
                label = "ctrl_ctv";
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                bindings
                    = <&macro_press &kp LCTRL>
                    , <&macro_tap &kp C &kp T &kp V>
                    , <&macro_release &kp LCTRL>
                    , <&macro_tap &kp RET>
                    ;
            };
        };

        combos{
                compatible = "zmk,combos";
                combo_alt_shift_up {
                    timeout-ms = <50>;
                    key-positions = <6 18>;
                    bindings = <&kp LA(LS(UP_ARROW))>;
                };

                combo_alt_shift_down {
                    timeout-ms = <50>;
                    key-positions = <18 30>;
                    bindings = <&kp LA(LS(DOWN_ARROW))>;
                };

                combo_ctrl_enter {
                    timeout-ms = <50>;
                    key-positions = <6 7>;
                    bindings = <&kp LC(ENTER)>;
                };
                combo_ctrl_f {
                    timeout-ms = <50>;
                    key-positions = <4 5>;
                    bindings = <&kp LC(F)>;
                };
                combo_ctrl_ctv {
                    timeout-ms = <50>;
                    key-positions = <16 17>;
                    bindings = <&ctrl_ctv>;
                };
                combo_alt_f4 {
                    timeout-ms = <50>;
                    key-positions = <10 11>;
                    bindings = <&kp LA(F4)>;
                };
        };

         
        keymap {
                compatible = "zmk,keymap";

                default_layer { 
                        label = "Base";
                        bindings = <
// ╭──────────┬───────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────────┬───────────────────┬───────────────┬────────────╮
// | j        |  f            |  u          |  p          |  d          |  y          | |  g          |  v          |  h              |  ö                |  ő            |  ó         |11
     &kp J       &kp F           &kp  U        &kp P         &kp D         &kp Z           &kp G         &kp V         &kp H             &kp NUMBER_0        &kp LBKT        &kp EQUAL      
// ├──────────┼───────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────────┼───────────────────┼───────────────┼────────────┤
// | o        |  t            |  l          |  e          |  s _        |  á          | |  i          |  n _        |   a             |  k                |   r           | ű          |23
     &kp O       &kp T           &kp L         &kp E         &kp S         &kp HU_A_ACUTE  &kp I         &kp N          &kp A            &kp K                &kp R         &kp BSLH  
// ├──────────┼───────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────────┼───────────────────┼───────────────┼────────────┤    
// | í        |  ú            |  ü          |  c          |   z         |  b          | |  é          |  m          |  , (.)          |  - (_)            |   x           |  w(q)      |35 
     &kp NUBS    &kp RBKT       &kp MINUS      &kp C          &kp Y        &kp B           &kp SEMI      &kp M        &hm DOT COMMA     &hm LS(FSLH) FSLH    &kp X           &hm Q W
// ╰──────────┴───────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────────┼───────────────────┴───────────────┴────────────╯
//                                          |  SHIFT      |             |  SPACE      | |  ENTER      |             |  CTRL           |  41                         
                                               &kp LSHIFT     &mo 2        &kp SPACE       &kp RET       &mo 1         &kp LCTRL
//                                          ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────────╯                                         

                        >;
                };


                raise_layer { 
                        label = "F & NUM";
                        bindings = <
// ╭──────────┬──────────────┬─────────────┬───────────────┬──────────────┬─────────────────╮ ╭─────────────┬─────────────┬─────────────┬───────────────────┬───────────────┬───────────────╮
// | F1       |  F2          |  F3         |  F4           |   ALT GR     |  CTRL           | |  7          |   8         |  9          |  mac 0            | BT3           |  BT1          | 52   
     &kp F1      &kp F2         &kp F3        &kp F4          &kp RALT       &kp LCTRL           &kp N7         &kp N8       &kp N9        &kp KP_N0          &bt BT_SEL 3     &bt BT_SEL 0  
// ├──────────┼──────────────┼─────────────┼───────────────┼──────────────┼─────────────────┤ ├─────────────┼─────────────┼─────────────┼───────────────────┼───────────────┼───────────────┤
// |  F5      |  F6          |  F7         |  F8           |  ALT         |  RCTRL          | |  4          |   5         |  6          |  0                | DEL           |  BT2          | 64
      &kp F5     &kp F6         &kp F7        &kp F8          &kp LALT       &kp RCTRL           &kp N4          &kp N5       &kp N6      &kp GRAVE           &kp DEL          &bt BT_SEL 1
// ├──────────┼──────────────┼─────────────┼───────────────┼──────────────┼─────────────────┤ ├─────────────┼─────────────┼─────────────┼───────────────────┼───────────────┼───────────────┤
// | F9       |  F10         |  F11        |  F12          |              |  win/command    | |  1          |   2         |  3          | ctrl + /          |  BSPC         | BT3           | 76      
     &kp F9      &kp F10        &kp F11       &kp F12           &none        &kp LGUI            &kp N1         &kp N2       &kp N3       &kp LC(KP_DIVIDE)    &kp BSPC       &bt BT_SEL 2   
// ╰──────────┴──────────────┴─────────────┼───────────────┼──────────────┼─────────────────┤ ├─────────────┼─────────────┼─────────────┼───────────────────┴───────────────┴───────────────╯
//                                         |               |              |                 | |             |             |             |  82 
                                                &trans          &trans         &trans            &trans         &trans       &trans   
//                                         ╰───────────────┴──────────────┴─────────────────╯ ╰─────────────┴─────────────┴─────────────╯                                         

                        >;
                };

                lower_layer { 
                        label = "SIM_NAV";
                        bindings = <
// ╭────────────┬─────────────────┬─────────────┬────────────────────┬─────────────────┬─────────────────────╮ ╭─────────────────────┬───────────────┬─────────────────────┬───────────────────┬───────────────┬───────────────╮
// |  €         |   ~             |  #          |  ' (")             |    / \          |  ( )                | |                     | UP(PAGE UP)   |                     | PRINTSCREEN       |               |   ESC         | 94
      &kp RA(U)     &kp RA(N1)       &kp RA(X)     &hm AT EXCL         &hm RA(Q) CARET  &hm LPAR LS(NUMBER_8)     &kp BSPC             &hm PG_UP UP     &kp DEL              &kp PRINTSCREEN      &none            &kp ESC
// ├────────────┼─────────────────┼─────────────┼────────────────────┼─────────────────┼─────────────────────┤ ├─────────────────────┼───────────────┼─────────────────────┼───────────────────┼───────────────┼───────────────┤    
// |  &         |  *              |  %          |  = (' mac)         |  @              |  [ ]                | | LEFT(HOME)          |  TAB          | RIGHT(CTRL +R)      |  BSPC             |  DEL          |               | 106   
      &kp RA(C)   &kp KP_MULTIPLY   &kp PRCNT    &hm RA(N9) LS(N7)      &kp RA(V)         &hm LBKT RBKT          &hm LC(LEFT) LEFT      &kp TAB        &hm LC(RIGHT) RIGHT    &kp BSPC            &none            &none
// ├────────────┼─────────────────┼─────────────┼────────────────────┼─────────────────┼─────────────────────┤ ├─────────────────────┼───────────────┼─────────────────────┼───────────────────┼───────────────┼───────────────┤
// | $          |  !              |  +          |  "|"               |  <>             |  { }                | |  HOME               | DOWN(PG_DN)   |   END               |                   |  BSPC         |               | 118   
     &kp RA(SEMI)  &kp LS(N4)         &kp HASH      &kp RA(W)           &hm RA(Z) RA(M)    &hm RA(N) RA(B)          &kp HOME            &hm PG_DN DOWN    &kp END              &none              &bt BT_CLR       &none
// ╰────────────┴─────────────────┴─────────────┼────────────────────┼─────────────────┼─────────────────────┤ ├─────────────────────┼───────────────┼─────────────────────┼───────────────────┴───────────────┴───────────────╯
//                                              |  copy (paste)      |                 |                     | |                     |               |                     |   123  
                                                   &hm LC(V) LC(C)       &trans             &trans                 &trans                &trans           &trans
//                                              ╰────────────────────┴─────────────────┴─────────────────────╯ ╰─────────────────────┴───────────────┴─────────────────────╯                                         
                                                                                                                     
                        >;
                };

        };
};
